openapi: 3.0.0
info:
  title: API de Finanças Pessoais
  version: 1.0.0
  description: API para controle de receitas, despesas e saldo pessoal.

servers:
  - url: http://localhost:3000/api/v1
    description: Ambiente local de desenvolvimento

tags:
  - name: Autenticação
    description: Endpoints para cadastro e login de usuários
  - name: Transações
    description: Endpoints para operações de receitas, despesas e saldo

paths:
  /auth/register:
    post:
      tags: [Autenticação]
      summary: Cadastrar novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterInput'
      responses:
        '201':
          description: Usuário cadastrado com sucesso
        '409':
          description: E-mail já está em uso
        '422':
          description: Erro de validação nos dados enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /auth/login:
    post:
      tags: [Autenticação]
      summary: Autenticar usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
      responses:
        '200':
          description: Login realizado com sucesso
        '401':
          description: Credenciais inválidas
        '422':
          description: Erro de validação nos dados enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /transactions:
    get:
      tags: [Transações]
      summary: Listar transações com filtros e paginação
      security:
        - bearerAuth: []
      parameters:
        - name: dataInicio
          in: query
          schema:
            type: string
            format: date
        - name: dataFim
          in: query
          schema:
            type: string
            format: date
        - name: limit
          in: query
          schema:
            type: integer
        - name: skip
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Lista de transações retornada com sucesso

    post:
      tags: [Transações]
      summary: Criar nova transação
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        '201':
          description: Transação criada com sucesso
        '422':
          description: Erro de validação nos dados enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /transactions/{id}:
    put:
      tags: [Transações]
      summary: Atualizar transação existente
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        '200':
          description: Transação atualizada com sucesso
        '404':
          description: Transação não encontrada
        '422':
          description: Erro de validação nos dados enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

    delete:
      tags: [Transações]
      summary: Remover transação
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Transação removida com sucesso
        '404':
          description: Transação não encontrada

  /transactions/amount:
    get:
      tags: [Transações]
      summary: Consultar saldo atual do usuário
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Saldo retornado com sucesso

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegisterInput:
      type: object
      required: [name, email, password]
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    UserLoginInput:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    TransactionInput:
      type: object
      required: [amount, type, date]
      properties:
        amount:
          type: number
          format: float
        type:
          type: string
          enum: [receita, despesa]
        date:
          type: string
          format: date

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Alguns campos estão incorretos.
        error:
          type: string
          example: Validation Error
        errors:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                description: Nome do campo com erro
                example: senha
              message:
                type: string
                description: Descrição do erro de validação
                example: Campo obrigatório não fornecido
